# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- develop

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: 'sudo npm install -g azure-functions-core-tools@3 --unsafe-perm=true --allow-root'
  displayName: 'npm install -g azure-functions-core-tools@3'
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    options: '-P dev'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'
- task: CopyFiles@2
  displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: '**/azure-functions/**'
    TargetFolder: '$(build.artifactstagingdirectory)'
  condition: succeededOrFailed()
- task: jessehouwing.jessehouwing-vsts-variable-tasks.vsts-variable-set.VariableSetTask@1
  displayName: 'Set variable: functionAppMvnTargetFolder to: ''af-tccc-gtc-meta-parser'''
  inputs:
    VariableName: functionAppMvnTargetFolder
    Value: 'af-tccc-gtc-meta-parser'
- task: ArchiveFiles@2
  displayName: 'Archive $(build.artifactstagingdirectory)/target/azure-functions/$(functionAppMvnTargetFolder)'
  inputs:
    rootFolderOrFile: '$(build.artifactstagingdirectory)/target/azure-functions/$(functionAppMvnTargetFolder)'
    includeRootFolder: false
    archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
    archiveType: zip
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
